@use "../../assets/mixin.scss" as m;
@use "../../assets/variables.scss" as v;

.photo-gallery__outer {
  margin-bottom: calc(4vw + 2rem);

  .photo-gallery__title {
    line-height: 1;
    font-size: v.$font-size-h3;
    font-weight: 800;
    text-transform: uppercase;
    color: v.$activeStateColor;
    position: relative;
    width: fit-content;
    @include m.heading-margin;

    &::after {
      content: "";
      position: absolute;
      bottom: -8px;
      right: 0;
      width: 100%;
      height: 4px;
      background: linear-gradient(
        to left,
        v.$activeStateColor,
        transparent 60%
      );
      border-radius: 2px;
    }
  }

  .photo-gallery__wrapper {
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: auto;
    background: #151515;
  }

  #grid-container {
    width: calc(4 * (100% + 7px));
    border: 7px solid #233d4d;
    overflow: hidden;
    background: #233d4d;
    border-radius: 7px;
  }

  .grid {
    display: grid;
    grid-template-columns: 1fr;
    grid-row-gap: 7px;
    width: 200%;

    @media (max-width: 1024px) {
      width: 300%;
    }
    @media (max-width: 768px) and (orientation: portrait) {
      width: 400%;
    }
    @media (max-width: 450px) and (orientation: portrait) {
      width: 500%;
    }
    @media (max-width: 400px) and (orientation: portrait) {
      width: 800%;
    }
    @media (max-width: 375px) and (orientation: portrait) {
      width: 800%;
    }
  }

  .row {
    display: flex;
    overflow: hidden;
  }

  .box {
    position: relative;
    width: 100%;
    height: 300px;
    margin-right: 7px;
    border-radius: 7px;
    cursor: pointer;
    overflow: hidden;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: cover;

    &::after {
      content: "";
      position: absolute;
      inset: 0;
      background: rgba(0, 0, 0, 0.7);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    &::before {
      content: "üîç";
      position: absolute;
      font-size: 2rem;
      color: #fff;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
      transition: opacity 0.3s ease;
      pointer-events: none;
      z-index: 2;
    }

    &:hover::after,
    &:hover::before {
      opacity: 1;
    }
  }

  .forward {
    animation: forward-marquee 20s linear infinite;
    &:hover {
      animation-play-state: paused;
    }
  }

  .backward {
    animation: backward-marquee 20s linear infinite;
    &:hover {
      animation-play-state: paused;
    }
  }

  @keyframes forward-marquee {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }
  @keyframes backward-marquee {
    0% {
      transform: translateX(-50%);
    }
    100% {
      transform: translateX(0);
    }
  }
}

/* –ú–æ–¥–∞–ª–∫–∞ */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.7);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal {
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1001;
  height: 100vh;
  position: relative;
}

.modal-image-wrapper {
  position: relative;
  display: inline-block;
}

.modal-image {
  display: block;
  max-width: 90vw;
  max-height: 90vh;
  object-fit: contain;
  border: 1px solid #fff;
  box-shadow: 0 0 20px rgba(0, 0, 0, 1);
}

.modal-close {
  position: absolute;
  top: 8px;
  right: 8px;
  font-size: 1.6rem;
  font-weight: bold;
  color: #ff4d4d;
  cursor: pointer;
  z-index: 10;
  transition: transform 0.2s, color 0.2s;

  &:hover {
    color: #ff1a1a;
    transform: scale(1.2);
  }
}
